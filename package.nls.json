{
    "sensecode.description": "SenseCode is an AI-based coding assistant.",
    "sensecode.config.engines.description": "AI beckend engine list",
    "sensecode.config.engines.engine.description": "AI backend engine configuration",
    "sensecode.config.engines.engine.type": "Engine type, must be one of `sensecode`, `sensenova`, `openai`",
    "sensecode.config.engines.engine.label": "Engine label for UI dispaly",
    "sensecode.config.engines.engine.authurl": "Authorization URL",
    "sensecode.config.engines.engine.url": "Engine API URL",
    "sensecode.config.engines.engine.fill_mode_template": "Provide your own format template, in which `[languageId]`, `[prefix]`, `[suffix]` is replaced by luanguage ID, contents before & after the cursor (e.g. `<fim_prefix>Completion following [languageId] code:\\n[prefix]<fim_suffix>[suffix]<fim_middle>`)",
    "sensecode.config.engines.engine.key": "API Key for the engine, if not set, bring you to get it from authorization methods",
    "sensecode.config.engines.engine.key.ak": "Access key ID",
    "sensecode.config.engines.engine.key.sk": "Secret access key",
    "sensecode.config.engines.engine.username": "User name for UI dispaly, optional",
    "sensecode.config.engines.engine.option": "Engine configuration",
    "sensecode.config.engines.engine.option.total_token_num": "The total tokens to this backend engine",
    "sensecode.config.engines.engine.option.max_input_token_num": "The maximum input tokens to this backend engine",
    "sensecode.config.engines.engine.option.template": "Prompt template",
    "sensecode.config.engines.engine.option.parameters": "API parameters for model invoke, do not set parameters that affect context or set by extension settings (e.g. `n`, `stream`)",
    "sensecode.config.prompt": "Custom prompt list, support `{input[:placeholder]}` to ask for user input, and `{code}` to require code selection",
    "sensecode.config.prompt.item": "Prompt template",
    "sensecode.config.prompt.advanced": "Advanced prompt template",
    "sensecode.config.prompt.advanced.item": "Advanced prompt template with any custom `{*}` argument",
    "sensecode.config.prompt.advanced.shortcut": "Shortcut for current prompt",
    "sensecode.config.prompt.advanced.args": "Arguments setting for current prompt, each key corresponds to an argument of the same name",
    "sensecode.config.prompt.advanced.args.type": "Argument type, subset of types of `input` element, refer https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#input_types",
    "sensecode.view.title": "Assistant",
    "sensecode.command.clear": "Clear list",
    "sensecode.command.setAccessKey": "Set Access Key",
    "sensecode.command.help": "Help",
    "sensecode.command.terminal": "SenseCode Terminal",
    "sensecode.command.notebook.new": "SenseCode NoteBook",
    "sensecode.command.openEditor": "Open new SenseCode Assistant instance in editor",
    "sensecode.command.ask": "Ask SenseCode...",
    "sensecode.command.commit-msg": "Ask SenseCode to write a commit message",
    "sensecode.command.settings": "Settings",
    "sensecode.command.settingsReset": "Reset all settings",
    "sensecode.command.completionTrigger": "Code Inline Completion Trigger",
    "sensecode.command.onSuggestionAccepted": "Suggestion acception report"
}