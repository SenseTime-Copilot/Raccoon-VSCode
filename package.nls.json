{
    "sensecode.description": "SenseCode is an AI-based coding assistant.",
    "sensecode.config.engines.description": "AI beckend engine list",
    "sensecode.config.engines.engine.description": "AI backend engine configuration",
    "sensecode.config.engines.engine.type": "Engine type, must be one of `sensecode`, `sensenova`",
    "sensecode.config.engines.engine.label": "Engine label for UI dispaly",
    "sensecode.config.engines.engine.url": "Engine API URL",
    "sensecode.config.engines.engine.key": "API Key for the engine, if not set, use the key from secret storage",
    "sensecode.config.engines.engine.token_limit": "The maximum tokens to this backend engine",
    "sensecode.config.engines.engine.config": "API invoke config, do not set parameters that affect context (e.g. `prompt`, `suffix`, the extension collects them automatically) and `stream`",
    "sensecode.config.prompt": "Custom prompt list, support `{input:<placeholder>}` to ask for user input, and `{code}` to require code selection",
    "sensecode.config.prompt.item": "Prompt template",
    "sensecode.config.prompt.advanced": "Advanced prompt template",
    "sensecode.config.prompt.advanced.item": "Advanced prompt template with any custom `{*}` argument",
    "sensecode.config.prompt.advanced.args": "Arguments setting for current prompt",
    "sensecode.config.prompt.advanced.args.type": "Argument type",
    "sensecode.view.title": "Assistant",
    "sensecode.command.clear": "Clear list",
    "sensecode.command.setAccessKey": "Set Access Key",
    "sensecode.command.help": "Help",
    "sensecode.command.openEditor": "Open new SenseCode Assistant instance in editor",
    "sensecode.command.ask": "Ask SenseCode...",
    "sensecode.command.settings": "Settings",
    "sensecode.command.settingsReset": "Reset all settings",
    "sensecode.command.completionTrigger": "Code Inline Completion Trigger",
    "sensecode.command.onSuggestionAccepted": "Suggestion acception report"
}