:root {
    --container-padding: 0;
    --input-padding-vertical: 6px;
    --input-padding-horizontal: 4px;
    --input-margin-vertical: 4px;
    --input-margin-horizontal: 0;
}

body {
    padding: 0 var(--container-padding);
    color: var(--vscode-foreground);
    font-size: var(--vscode-font-size);
    font-weight: var(--vscode-font-weight);
    font-family: var(--vscode-font-family);
    background-color: var(--vscode-editor-background);
}

ol,
ul {
    padding-left: var(--container-padding);
}

body>*,
form>* {
    margin-block-start: var(--input-margin-vertical);
    margin-block-end: var(--input-margin-vertical);
}

*:focus {
    outline-color: var(--vscode-focusBorder) !important;
}

a {
    color: var(--vscode-textLink-foreground);
}

a:hover,
a:active {
    color: var(--vscode-textLink-activeForeground);
}

pre {
    margin-top: 1rem !important;
}

code {
    font-family: var(--vscode-editor-font-family) !important;
}

button {
    border: none;
    padding: var(--input-padding-vertical) var(--input-padding-horizontal);
    text-align: center;
    outline: 1px solid transparent;
    outline-offset: 2px !important;
    color: var(--vscode-button-secondaryForeground) !important;
    background: var(--vscode-button-secondaryBackground) !important;
}

button:hover {
    background: var(--vscode-button-secondaryHoverBackground) !important;
}

button:hover svg {
    stroke: var(--vscode-button-foreground) !important;
}

button:focus {
    outline-color: var(--vscode-focusBorder);
}

input:not([type='checkbox']),
textarea {
    display: block;
    width: 100%;
    border: none;
    font-family: var(--vscode-font-family);
    padding: var(--input-padding-vertical) var(--input-padding-horizontal);
    color: var(--vscode-input-foreground);
    outline-color: var(--vscode-input-border);
    background-color: var(--vscode-input-background);
}

input::placeholder,
textarea::placeholder {
    color: var(--vscode-input-placeholderForeground);
}

[contenteditable='true'] {
    outline: 1px solid var(--vscode-focusBorder);
}

.avatar {
    color: var(--vscode-button-background);
    align-items: center;
}

.avatar .material-symbols-rounded {
    font-size: 2em;
}

.vscode-high-contrast .avatar {
    color: var(--vscode-button-border);
}

.typing {
    color: var(--vscode-button-background);
}

/* CSS Spinner */
.spinner {
    color: var(--vscode-button-background);
    width: 36px;
    text-align: left;
}

.spinner>span {
    border-radius: 100%;
    display: inline-block;
    -webkit-animation: rotate 3s infinite;
    animation: rotate 3s infinite;
}


.vscode-high-contrast .typing,
.vscode-high-contrast .spinner {
    color: var(--vscode-button-border);
}

@-webkit-keyframes rotate {
    0% {
        -webkit-transform: rotate(0deg);
    }

    50% {
        -webkit-transform: rotate(180deg);
    }

    100% {
        -webkit-transform: rotate(360deg);
    }
}

@keyframes rotate {
    0% {
        transform: rotate(0deg);
    }

    50% {
        transform: rotate(180deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

.textarea-wrapper {
    display: grid;
    max-height: 20rem;
}

.textarea-wrapper::after {
    content: attr(data-replicated-value) " ";
    white-space: pre-wrap;
    visibility: hidden;
}

.textarea-wrapper>textarea {
    resize: none;
    overflow: hidden auto;
    max-height: 20rem;
}

.textarea-wrapper>textarea,
.textarea-wrapper::after {
    border: 1px solid black;
    padding: .5rem 5rem .5rem .5rem;
    font: inherit;
    grid-area: 1 / 1 / 2 / 2;
}

.pre-code-element:hover .code-actions-wrapper {
    opacity: 1;
    display: flex;
}

#qa-list-wrapper {
    height: calc(100vh);
    margin: 0;
}

.question-element-gnc {
    background: var(--vscode-editor-hoverHighlightBackground);
}

.answer-element-gnc {
    background: var(--vscode-editor-background);
}

.whitespace-pre {
    padding: 20px 10px 10px 10px;
    background-color: var(--vscode-editor-rangeHighlightBackground);
}